services:  
  loyalty_service:
    container_name: LoyaltyService
    build:
      context: .
      dockerfile: ./LoyaltyService/Dockerfile
    image: tonynm/loyalty_service
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - loyalty_database
    ports:
      - "8050:8050"
  
  loyalty_database:
    container_name: LoyaltyDatabase
    image: library/postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres_loyalty
      POSTGRES_PASSWORD: "postgres_loyalty"
      POSTGRES_DB: postgres_loyalty
    volumes:
      - ./LoyaltyService/Database/db-data:/var/lib/postgresql/data
      - ./LoyaltyService/Database/db-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "8051:5432"

  payment_service:
    container_name: PaymentService
    build:
      context: .
      dockerfile: ./PaymentService/Dockerfile
    depends_on:
      - payment_database
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    image: tonynm/payment_service
    restart: on-failure
    ports:
      - "8060:8060"

  payment_database:
    container_name: PaymentDatabase
    image: library/postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres_payment
      POSTGRES_PASSWORD: "postgres_payment"
      POSTGRES_DB: postgres_payment
    volumes:
      - ./PaymentService/Database/db-data:/var/lib/postgresql/data
      - ./PaymentService/Database/db-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "8061:5432"

  reservation_service:
    container_name: ReservationService
    build:
      context: .
      dockerfile: ./ReservationService/Dockerfile
    depends_on:
      - reservation_database
    image: tonynm/reservation_service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    restart: on-failure
    ports:
      - "8070:8070"

  reservation_database:
    container_name: ReservationDatabase
    image: library/postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres_reservation
      POSTGRES_PASSWORD: "postgres_reservation"
      POSTGRES_DB: postgres_reservation
    volumes:
      - ./ReservationService/Database/db-data:/var/lib/postgresql/data
      - ./ReservationService/Database/db-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "8071:5432"

  identity_service:
    container_name: IdentityService
    build:
      context: .
      dockerfile: ./IdentityService/Dockerfile
    depends_on:
      - identity_database
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    image: tonynm/identity_service
    restart: on-failure
    ports:
      - "8000:8000"

  identity_database:
    container_name: IdentityDatabase
    image: postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres_identity
      POSTGRES_PASSWORD: "postgres_identity"
      POSTGRES_DB: postgres_identity
    ports:
      - "8001:5432"
    volumes:
      - ./IdentityService/Database/db-data:/var/lib/postgresql/data

  statistics_service:
    container_name: StatisticsService
    build:
      context: .
      dockerfile: ./StatisticsService/Dockerfile
    image: tonynm/statistics_service
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - statistics_database
      - kafka
    ports:
      - "8010:8010"
    
  statistics_database:
    container_name: StatisticsDatabase
    image: library/postgres:13
    restart: on-failure
    environment:
      POSTGRES_USER: postgres_statistics
      POSTGRES_PASSWORD: "postgres_statistics"
      POSTGRES_DB: postgres_statistics
    volumes:
      - ./StatisticsService/Database/db-data:/var/lib/postgresql/data
      - ./StatisticsService/Database/db-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "8011:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
    depends_on:
      - zookeeper

  gateway_service:
    container_name: GatewayService
    build:
      context: .
      dockerfile: ./GatewayService/Dockerfile    
    depends_on:
      - reservation_database
      - reservation_service
      - payment_database
      - payment_service
      - loyalty_database
      - loyalty_service
      - identity_database
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    image: tonynm/gateway_service
    restart: on-failure
    ports:
      - "8080:8080"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"