name: GitHub Classroom Workflow
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
jobs:
  api-test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build images
        timeout-minutes: 10
        run: |
          cd program/backend
          docker compose build

      - name: Run containers
        timeout-minutes: 5
        run: |
          cd program/backend
          docker compose up -d
          ./scripts/wait-script.sh
        env:
          WAIT_PORTS: 8080,8070,8060,8050

      - name: Wait 30s
        run: sleep 30s 

      - name: Run API Tests
        timeout-minutes: 5
        run: |
          cd program/backend
          ./scripts/test-script.sh
        env:
          SERVICE_NAME: loyalty_service
          PORT_NUMBER: 8050

      - name: Stop containers
        if: always()
        continue-on-error: true
        run: |
          cd program/backend
          docker compose down -v

  push-images:
    name: Push to Docker Hub
    needs: api-test
    runs-on: ubuntu-latest
    if: success()
    steps:
      - uses: actions/checkout@v3
      
      - name: Build images
        run: |
          cd program/backend
          docker compose build
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push images
        run: |
          cd program/backend
          docker compose push

  deploy:
    name: Deploy to Minikube and run tests
    needs: push-images
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.30.0

    - name: Install Helm
      uses: azure/setup-helm@v4.2.0
      with:
        version: v3.14.4

    - name: Install Minikube
      run: |
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        chmod +x minikube
        sudo mv minikube /usr/local/bin/
        minikube version

    - name: Start Minikube and enable ingress
      run: |
        echo ">>> Starting Minikube..."
        minikube start --driver=docker --kubernetes-version=v1.30.0 --memory=4096 --cpus=2
        echo ">>> Enabling ingress..."
        minikube addons enable ingress

    - name: Deploy dependencies
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update
        helm upgrade --install loyalty-db bitnami/postgresql -f program/helm/postgres/values/loyalty-db.yaml
        helm upgrade --install payment-db bitnami/postgresql -f program/helm/postgres/values/payment-db.yaml
        helm upgrade --install reservation-db bitnami/postgresql -f program/helm/postgres/values/reservation-db.yaml
        helm upgrade --install identity-db bitnami/postgresql -f program/helm/postgres/values/identity-db.yaml
        helm upgrade --install statistics-db bitnami/postgresql -f program/helm/postgres/values/statistics-db.yaml
        helm upgrade --install redis bitnami/redis -f program/helm/redis/values/redis.yaml
        helm upgrade --install kafka bitnami/kafka -f program/helm/kafka/values/kafka.yaml

    - name: Deploy microservices
      run: |
        helm upgrade --install gateway program/helm/services -f program/helm/services/values/gateway.yaml
        helm upgrade --install loyalty program/helm/services -f program/helm/services/values/loyalty.yaml
        helm upgrade --install payment program/helm/services -f program/helm/services/values/payment.yaml
        helm upgrade --install reservation program/helm/services -f program/helm/services/values/reservation.yaml
        helm upgrade --install identity program/helm/services -f program/helm/services/values/identity.yaml
        helm upgrade --install statistics program/helm/services -f program/helm/services/values/statistics.yaml
        helm upgrade --install frontend program/helm/services -f program/helm/services/values/frontend.yaml

    - name: Check cluster status
      run: |
        kubectl get pods -o wide
        kubectl get svc
        kubectl get ingress
        echo ">>> Minikube IP:"
        minikube ip

    - name: Get Ingress IP
      run: |
        minikube tunnel & 
        sleep 10s
        INGRESS_IP=$(minikube ip)
        echo "Ingress IP: $INGRESS_IP"
        echo "ingress_ip=$INGRESS_IP" >> $GITHUB_ENV
    
    - name: Update Postman environment
      run: |
        INGRESS_IP=$(minikube ip)
        echo "Ingress IP: $INGRESS_IP"
        jq '.values |= map(if .key == "baseUrl" then .value = "http://'"$INGRESS_IP"'" else . end)' \
        program/postman/environment.json > updated_environment.json
        mv updated_environment.json program/postman/environment.json
        cat program/postman/environment.json

    - name: Adding dns names to /etc/hosts
      run: |
        INGRESS_IP=$(minikube ip)
        echo "$INGRESS_IP identity.local gateway.local" | sudo tee -a /etc/hosts

    - name: Wait 90s
      run: sleep 90s 
      
    - name: Get pods
      run: kubectl get pods -o wide

    - name: Run API Tests
      uses: matt-ball/newman-action@master
      with:
        collection: program/postman/collection.json
        environment: program/postman/environment.json
        delayRequest: 200
        reporters: '[ "cli" ]'
        insecure: true